{"ast":null,"code":"const ADD_TODO = \"todosModule/ADD_TODO\";\nconst TOGGLE_TODO = \"todosModule/TOGGLE_TODO\";\nlet nextId = 1;\nexport const addTodo = text => ({\n  type: ADD_TODO,\n  todo: {\n    id: nextId++,\n    text: text\n  }\n});\nexport const toggleTodo = id => ({\n  type: TOGGLE_TODO,\n  id: id\n});\nconst initialState = [];\nexport default function todosModule(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO:\n      return state.concat(action.todo);\n\n    case TOGGLE_TODO:\n      return state.map(todo => todo.id === action.id ? { ...todo,\n        done: !todo.done\n      } : todo);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/kuzhi/Desktop/STUDY/React.Study/redux_study/reduxBasic/src/modules/todosModule.jsx"],"names":["ADD_TODO","TOGGLE_TODO","nextId","addTodo","text","type","todo","id","toggleTodo","initialState","todosModule","state","action","concat","map","done"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,sBAAjB;AACA,MAAMC,WAAW,GAAG,yBAApB;AAEA,IAAIC,MAAM,GAAG,CAAb;AACA,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAW;AAChCC,EAAAA,IAAI,EAAEL,QAD0B;AAEhCM,EAAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAEL,MAAM,EADN;AAEJE,IAAAA,IAAI,EAAEA;AAFF;AAF0B,CAAX,CAAhB;AAQP,OAAO,MAAMI,UAAU,GAAID,EAAD,KAAS;AACjCF,EAAAA,IAAI,EAAEJ,WAD2B;AAEjCM,EAAAA,EAAE,EAAEA;AAF6B,CAAT,CAAnB;AAKP,MAAME,YAAY,GAAG,EAArB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGF,YAA7B,EAA2CG,MAA3C,EAAmD;AAChE,UAAQA,MAAM,CAACP,IAAf;AACE,SAAKL,QAAL;AACE,aAAOW,KAAK,CAACE,MAAN,CAAaD,MAAM,CAACN,IAApB,CAAP;;AACF,SAAKL,WAAL;AACE,aAAOU,KAAK,CAACG,GAAN,CAAWR,IAAD,IACfA,IAAI,CAACC,EAAL,KAAYK,MAAM,CAACL,EAAnB,GAAwB,EAAE,GAAGD,IAAL;AAAWS,QAAAA,IAAI,EAAE,CAACT,IAAI,CAACS;AAAvB,OAAxB,GAAwDT,IADnD,CAAP;;AAGF;AACE,aAAOK,KAAP;AARJ;AAUD","sourcesContent":["const ADD_TODO = \"todosModule/ADD_TODO\";\nconst TOGGLE_TODO = \"todosModule/TOGGLE_TODO\";\n\nlet nextId = 1;\nexport const addTodo = (text) => ({\n  type: ADD_TODO,\n  todo: {\n    id: nextId++,\n    text: text,\n  },\n});\n\nexport const toggleTodo = (id) => ({\n  type: TOGGLE_TODO,\n  id: id,\n});\n\nconst initialState = [];\n\nexport default function todosModule(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO:\n      return state.concat(action.todo);\n    case TOGGLE_TODO:\n      return state.map((todo) =>\n        todo.id === action.id ? { ...todo, done: !todo.done } : todo\n      );\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}